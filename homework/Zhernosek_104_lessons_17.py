# Д.З.
"""Объявление класса """
class my_val:
    """переменная экземпляра класса"""
    def __init__(self, val):
        self.val = val

    """метод экземпляра класса для вычисления длинны введенной переменной"""
    def func_(self):
        return len(str(self.val))

    """метод для определения типа введенной переменной экземпляра класса и вывода значения согласно условию"""
    def val_(self):
        if isinstance(self.val, str):  # проверка переменной на соответствие типу строка
            list_abc = ['а', 'у', 'о', 'и', 'э', 'ы', 'я', 'ю', 'е', 'ё']  # список с гласными буквами
            alf_a = []  # пустой список для гласных букв введенного слова
            alf_b = []  # пустой список для согласных букв введенного слова
            for alf in self.val:  # цикл для итерации введенного слова
                if alf.lower() in list_abc:  # условие для гласных букв
                    alf_a.append(alf)  # добавляем гласные буквы в список alf_a
                else:
                    alf_b.append(alf)  # добавляем согласные буквы в список alf_b
            if len(alf_a) * len(alf_b) <= self.func_():  # условие для вывода гласных букв
                return alf_a
            else:  # условие для вывода согласных букв
                return alf_b
        elif isinstance(self.val, int):   # проверка переменной на соответствие типу число
            sum_num = 0  # щетчик суммы четных цифр
            for i in str(self.val):  # цикл для итерации введенного числа
                if int(i) % 2 == 0:  # условие выбора четного числа
                    sum_num += int(i)  # сумма четных чисел
                else:
                    pass
            return sum_num * self.func_()
        else:
            print('введенная переменная не число и не строка')


a = my_val(1234566)
b = my_val('алексей')
c = my_val('Какао')
print(a.func_(), a.val_())
print(b.func_(), b.val_())
print(c.func_(), c.val_())