import random


# задание № 2
def func_1(r):  # функция для подсчета площади окружности
    return 3.14 * r ** 2


def func_2(a, c):  # функция для подсчета площади прямоугольника
    return a * c


def func_3(b, h):  # функция для подсчета площади треугольника
    return 0.5 * b * h


func = int(input('выберите одну изфункцмй'
                 ' 1-площадь окружности'
                 ' 2-площадь прямоугольника'
                 ' 3-площадь треугольника >>> '
                 ''))  # функция для выбора необходимого подсчета
if func == 1:  # условие вызова функции для подсчета площади окружности
    print(func_1(int(input('введите радиус окружности >>> '))))
elif func == 2:  # условие вызова функции для подсчета площади опрямоугольника
    print(func_2(int(input('введите длинну прямоугольника >>> ')),
                 int(input('введите ширину прямоугольника >>> '))))
elif func == 3:  # условие вызова функции для подсчета площади треугольника
    print(func_3(int(input('введите сторону треугольника >>> ')),
                 int(input('введите высоту треугольника >>> '))))


# задание № 3
def rand(a, s):  # функция для заполнения списка
    r = [random.randint(a, s) for i in range(0, 10)]  # генератор списка из 10 значений
    print(r)  # вывод списка


rand(int(input('введите начало промежутка >>> ')), int(input('введите конец промежутка >>> ')))  # вызов функции


# задание № 4
def sek_(s):  # объявленеие функции  и парамметра
    m = s / 60  # посчет минут
    h = m / 60  # подсчет часов
    d = h / 24  # посчет дней
    return f'дней: {d}, часов: {h}, минут: {m}, секунд: {s}'  # возврат значения в нувжном формате


print(sek_(int(input('введите количество минут >>> '))))  # вывод функций


# задание № 5
def letter_(string_: str):  # объявленеие функции  и парамметра
    letter_a = 0  # счетчик для гласных букв
    letter_b = 0  # счетчик для согласных букв
    list_1 = ['а', 'о', 'у', 'э', 'ы', 'я', 'е', 'ё', 'ю', 'и']  # все гласные буквы русского алфавита
    for letter in string_.lower():  # цикл для итераций с введенной строкой
        if letter in list_1:  # условие отбора гласных букв
            letter_a += 1
        else:  # отбор согласных букв
            letter_b += 1
    print(f'гласных букв {letter_a}, согласных букв {letter_b}')  # вывод количества гласных и согласных букв


letter_(input('введите текст >>>'))  # вызов функции


# задание № 6
def sum_num_(num_):  # объявленеие функции  и парамметра
    sum_num = num_ + num_ ** 2 + num_ ** 3  # слажение введенного числа с возведением его в степени
    print(sum_num)  # ввывод значения


sum_num_(int(input('введите число >>>')))  # вызов функции


# задание № 7

def func_y(x):  # функция для выполнения уравнений с переменной х
    y = 0  # итоговая переменная
    if -5 <= x <= 5:
        y = x ** 2
    elif x < -5:
        y = 2 * abs(x) - 1
    elif x > 5:
        y = 2 * x
    return y  # возврат итоговой переменой


for x in range(-10, 11):  # список значений для параметра х
    print(func_y(x))  # вывод отработовшей функции


# Д.з.
def list_tuple(lt):
    sum_word = 0  # щетчик для слов
    sum_letter = 0  # щетчик для букв
    sum_num = 0  # щетчик для нечетных цифр
    if type(lt) is tuple:  # проверка на тип кортеж
        for word in lt:  # цикл для извлечения объектов кортежа
            if type(word) is str and word.isalpha():  # проверка на тип строка которая ссостоит из букв
                sum_word += 1  # щетчик объектов слова
        return sum_word  # возврат количества слов в кортеже
    elif type(lt) is list:  # проверка на тип список
        for string_ in lt:  # цик для извлечения объектов списка
            if type(string_) is str and string_.isalpha():  # проверка на тип строка которая состоит из букв
                sum_letter += len(string_)  # щетчик для всех букв
            elif type(string_) is int or \
                    type(string_) is str and string_.isdigit():  # проверка на тип число или строка состоящая из чисел
                for num_ in str(string_):  # цикл для переборки строки с цифрами
                    if int(num_) % 2 != 0:  # выбор нечетных цифр
                        sum_num += 1  # подсчет нечетных цифр
        return sum_letter, sum_num  # возврат количества букв, количество нечетных цифр


tuple_1 = ('age', 1991, 'month', 5, 'day', '30')  # заданный кортеж
list_1 = ['age', 1991, 'month', 5, 'day', '30']  # заданный список

print(type(tuple_1), list_tuple(tuple_1))  # проверка с кортежем
print(type(list_1), list_tuple(list_1))  # проверка с списком
